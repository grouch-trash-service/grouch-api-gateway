# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Deploy Grouch Api Gateway

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup NodeJs 8
      uses: actions/setup-node@v1
      with:
        node-version: 8.x
        registry-url: 'https://npm.pkg.github.com'
        scope: '@grouch-trash-service'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build with Maven
      run: ./mvnw -Drevision=${GITHUB_RUN_NUMBER} -B package --file pom.xml
      env:
        NODE_AUTH_TOKEN: ${{ github.token }}

    - name: Publish to GitHub Packages Apache Maven
      run: ./mvnw -Drevision=${GITHUB_RUN_NUMBER} deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Publish to GitHub Packages npm
      run: npm publish target/generated-sources/javascript
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy Sam templates
      run: sam deploy --no-fail-on-empty-changeset

    - name: Deploy Swagger
      run: |
        aws s3 cp src/main/resources/api.yaml s3://grouch-message-service-swagger
        aws s3 sync node_modules/swagger-ui-dist s3://grouch-message-service-swagger-ui

    - name: Run Cucumber Tests
      run: ./mvnw -P cucumber verify -Dspring.profiles.active=prod -DgrouchTrashMessageService.security.authorizer.key=${API_KEY}
      env:
        API_KEY: ${{ secrets.API_KEY }}



