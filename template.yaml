AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  grouch-trash-message-service

  Sample SAM Template for grouch-trash-message-service


Resources:
  GrouchApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: src/main/resources/api.yaml
  GetMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python3.7
      CodeUri: ./lambda
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /v1/message
            Method: get
            RestApiId: !Ref GrouchApiGateway

  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::ImportValue: grouch-auth-function-AuthFunction
      Principal: apigateway.amazonaws.com

  AuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: "*"

  SwaggerUiS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: grouch-message-service-swagger-ui
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: index.html
    DeletionPolicy: Retain

  SwaggerUiS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: SwaggerUiS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  - Ref: SwaggerUiS3Bucket
                  - "/*"
            Principal: "*"

  SwaggerS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: grouch-message-service-swagger
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: api.yaml
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
    DeletionPolicy: Retain

  SwaggerS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: SwaggerS3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  - Ref: SwaggerS3Bucket
                  - "/*"
            Principal: "*"
Outputs:
  WebsiteURL:
    Value: !GetAtt [SwaggerUiS3Bucket, WebsiteURL]
    Description: URL for website hosted on S3
  SchemaURL:
    Value: !GetAtt [SwaggerS3Bucket, WebsiteURL]
    Description: URL swagger schema
  S3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [SwaggerUiS3Bucket, DomainName]]]
    Description: Name of S3 bucket to hold website content


