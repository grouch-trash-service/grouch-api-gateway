<project xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>net.mporter</groupId>
    <artifactId>grouch-api-gateway</artifactId>
    <version>1.0.${revision}</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
    </parent>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <swagger-core-version>1.5.18</swagger-core-version>
        <cucumber.version>4.3.1</cucumber.version>
        <revision>0-SNAPSHOT</revision>
    </properties>

    <distributionManagement>
        <repository>
            <id>github</id>
            <url>https://maven.pkg.github.com/grouch-trash-service/grouch-api-gateway</url>
        </repository>
        <snapshotRepository>
            <id>github</id>
            <url>https://maven.pkg.github.com/grouch-trash-service/grouch-api-gateway</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- activate the plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>3.3.4</version>
                <executions>
                    <execution>
                        <id>generate-java</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- specify the swagger yaml -->
                            <inputSpec>src/main/resources/api.yaml</inputSpec>

                            <!-- target to generate java client code -->
                            <generatorName>spring</generatorName>

                            <!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->

                            <!-- pass any necessary config options -->
                            <configOptions>
                                <dateLibrary>joda</dateLibrary>
                            </configOptions>
                            <library>spring-cloud</library>
                            <output>${project.build.directory}/generated-sources/java</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-javascript</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <gitUserId>grouch-trash-service</gitUserId>
                            <gitRepoId>grouch-api-gateway</gitRepoId>
                            <additionalProperties>npmRepository=npm.pkg.github.com/,npmName=@grouch-trash-service/grouch-api-gateway,npmVersion=${project.version}</additionalProperties>
                            <!-- specify the swagger yaml -->
                            <inputSpec>src/main/resources/api.yaml</inputSpec>

                            <!-- target to generate java client code -->
                            <generatorName>typescript-node</generatorName>

                            <!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->
                            <!-- pass any necessary config options -->
                            <output>${project.build.directory}/generated-sources/javascript</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>exec-npm-install</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>exec-npm-install-javascript-client</id>
                        <phase>compile</phase>
                        <configuration>
                            <workingDirectory>${project.build.directory}/generated-sources/javascript</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>exec-npm-build-javascript-client</id>
                        <phase>compile</phase>
                        <configuration>
                            <workingDirectory>${project.build.directory}/generated-sources/javascript</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>exec-npm-publish</id>
                        <phase>deploy</phase>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>npm</executable>
                            <arguments>
                                <argument>publish</argument>
                                <argument>${project.build.directory}/generated-sources/javascript</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>exec-sam-build</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>sam</executable>
                            <arguments>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>cucumber</id>
            <build>
               <plugins>
                   <plugin>
                       <groupId>org.apache.maven.plugins</groupId>
                       <artifactId>maven-failsafe-plugin</artifactId>
                       <version>3.0.0-M4</version>
                       <configuration>
                           <includes>
                               <include>**/CucumberRunner.java</include>
                           </includes>
                       </configuration>
                       <executions>
                           <execution>
                               <goals>
                                   <goal>integration-test</goal>
                                   <goal>verify</goal>
                               </goals>
                           </execution>
                       </executions>
                   </plugin>
               </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-parent</artifactId>
                <version>Finchley.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
    </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <scope>test</scope>
    </dependency>
    </dependencies>

</project>